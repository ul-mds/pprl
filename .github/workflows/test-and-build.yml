name: Test

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - "scripts/**"
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.11"
          - "3.10"
        package:
          - "pprl_client"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        working-directory: ./packages/${{ matrix.package }}
        run: poetry install
      - name: Test
        working-directory: ./packages/${{ matrix.package }}
        run: poetry run pytest -rs
        env:
          PPRL_BASE_URL: http://localhost:8000
          PPRL_USE_TESTCONTAINER: 0
    services:
      pprl:
        image: ghcr.io/ul-mds/pprl:0.1.1
        ports:
          - 8000:8000

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.11"
          - "3.10"
        package:
          - "pprl_core"
          - "pprl_model"
          - "pprl_service"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        working-directory: ./packages/${{ matrix.package }}
        run: poetry install
      - name: Test
        working-directory: ./packages/${{ matrix.package }}
        run: poetry run pytest -rs
  
  build-docker:
    if: github.event_name == 'push' || github.event.pull_request.merged
    needs: [test, integration-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha
            type=raw,value={{date '[dev-]YYYYMMDD[T]HHmmss[Z]' tz='UTC'}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
